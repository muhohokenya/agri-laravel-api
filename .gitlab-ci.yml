# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: gitlab/dind

services:
  - docker:dind
stages:          # List of stages for jobs, and their order of execution
#  - build
  - test
  - deploy

#build-job:       # This job runs in the build stage, which runs first.
#  stage: build
#  script:
#    - echo "Compiling the code..."
#    - echo "Compile complete."


#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#      - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#      - eval $(ssh-agent -s)
##      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#      - ssh-add <(echo "$SSH_PRIVATE_KEY")
##      - chmod 700 .ssh/id_rsa
#      - ssh-keyscan -t rsa 147.182.135.96 > ~/.ssh/known_hosts
#      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#      - chmod 644 .ssh/known_hosts
#    sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - ssh -oStrictHostKeyChecking=no root@147.182.135.96 "cd var/www/laravel && git checkout main && git pull origin main && exit"
#    - echo "Application successfully deployed."
deploy_production:
  stage: deploy
  before_script:
#    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 /builds/agristroom/agristroom-backend.tmp/SSH_PRIVATE_KEY
    - ssh-add "$SSH_PRIVATE_KEY"
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@147.182.135.96
