name: api

on:
  push:
    branches: [ "main" ]
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Ssh and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.USER_NAME }}
          port: 22
          script: |
            cd /var/www/laravel/
            git pull origin main
            php artisan db:wipe
            php artisan migrate
            php artisan db:seed
            composer update
  publish artifact:
    name : Publish Artifact
    runs-on: ubuntu-latest
    steps:
     - name : Publish Artifact
     - uses: actions/upload-artifact@v3
       with:
         name: my-artifact
         path: agristroom # or path/to/artifact

#  t
#      name: laravel-test
#      runs-on: ubuntu-latest
#      steps:
#      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#        with:
#          php-version: '8.2.6'
#      - uses: actions/checkout@v3
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - name: Install Dependencies
#        run: |
#          docker run --rm \
#              -u "$(id -u):$(id -g)" \
#              -v "$(pwd):/var/www/html" \
#              -w /var/www/html \
#              laravelsail/php82-composer:latest \
#              composer install --ignore-platform-reqs
#      - name: Start sail
#        run: |
#          ./vendor/bin/sail up -d
#      - name: Generate key
#        run: ./vendor/bin/sail artisan key:generate
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#      - name: Create Database
#        run: |
#          mkdir -p database
#          touch database/database.sqlite
#          vendor/bin/sail artisan migrate
#
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        env:
#          DB_CONNECTION: sqlite
#          DB_DATABASE: database/database.sqlite
#        run: vendor/bin/phpunit
#
##  sonarcloud:
##      name: SonarCloud
##      runs-on: ubuntu-latest
##      steps:
##        - uses: actions/checkout@v3
##          with:
##            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
##        - name: SonarCloud Scan
##          uses: SonarSource/sonarcloud-github-action@master
##          env:
###            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
##            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
